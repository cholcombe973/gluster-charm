create-volume-quota:
  description: |
    Directory quotas in GlusterFS allows you to set limits on usage of the disk
    space by volumes.
  params:
    volume:
      type: string
      description: The volume to enable this quota on
    usage-limit:
      type: integer
      description: The MB limit of the quota for this volume.
    path:
      type: string
      description: The path to limit the usage on.  Defaults to /
      default: "/"
  required: [volume, usage-limit]
  additionalProperties: false
delete-volume-quota:
  description: |
    Directory quotas in GlusterFS allows you to set limits on usage of the disk
    space by volumes.
  params:
    volume:
      type: string
      description: The volume to disable this quota on
    path:
      type: string
      description: The path to remove the limit on.  Defaults to /
      default: "/"
  required: [volume]
  additionalProperties: false
list-volume-quotas:
  description: |
    Directory quotas in GlusterFS allows you to set limits on usage of the disk
    space by volumes.
  params:
    volume:
      type: string
      description: The volume to list quotas on
  required: [volume]
  additionalProperties: false
rebalance-volume:
  description: |
    After expanding or shrinking a volume you need to rebalance the data
    among the servers. New directories created after expanding or
    shrinking of the volume will be evenly distributed automatically.
    For all the existing directories, the distribution can be fixed by
    rebalancing the layout and/or data.  This action should be run
    in a maintenance window because client IO will be impacted.
  params:
    volume:
      type: string
      description: The volume to rebalance
  required: [volume]
  additionalProperties: false
set-volume-options:
  description: |
    You can tune volume options, as needed, while the cluster is online
    and available.
  params:
    volume:
      type: string
      description: The volume to set the option on
    auth-allow:
      type: string
      description: |
        IP addresses of the clients which should be allowed to access the
        volume. Valid IP address which includes wild card patterns including *,
        such as 192.168.1.*
    auth-reject:
      type: string
      description: |
        IP addresses of the clients which should be denied to access the volume.
        Valid IP address which includes wild card patterns including *,
        such as 192.168.1.*
    cluster-self-heal-window-size:
      type: integer
      description: |
        Specifies the maximum number of blocks per file on which self-heal
        would happen simultaneously.
      minimum: 0
      maximum: 1025
    cluster-data-self-heal-algorithm:
      description: |
        Specifies the type of self-heal. If you set the option as "full",
        the entire file is copied from source to destinations. If the option
        is set to "diff" the file blocks that are not in sync are copied to
        destinations. Reset uses a heuristic model. If the file does not exist
        on one of the subvolumes, or a zero-byte file exists (created by
        entry self-heal) the entire content has to be copied anyway, so there
        is no benefit from using the "diff" algorithm. If the file size is
        about the same as page size, the entire file can be read and written
        with a few operations, which will be faster than "diff" which has to
        read checksums and then read and write.
      type: string
      enum: [full,diff,reset]
    cluster-min-free-disk:
      type: integer
      description: |
        Specifies the percentage of disk space that must be kept free.
        Might be useful for non-uniform bricks
      minimum: 0
      maximum: 100
    cluster-stripe-block-size:
      type: integer
      description: |
        Specifies the size of the stripe unit that will be read from or written
        to.
    cluster-self-heal-daemon:
      type: boolean
      description: |
        Allows you to turn-off proactive self-heal on replicated
    cluster-ensure-durability:
      type: boolean
      description: |
        This option makes sure the data/metadata is durable across abrupt
        shutdown of the brick.
    diagnostics-brick-log-level:
      type: string
      description: |
        Changes the log-level of the bricks.
      enum: [debug,warning,error,none,trace,critical]
    diagnostics-client-log-level:
      type: string
      description: |
        Changes the log-level of the clients.
      enum: [debug,warning,error,none,trace,critical]
    diagnostics-latency-measurement:
      type: boolean
      description: |
        Statistics related to the latency of each operation would be tracked.
    diagnostics-dump-fd-stats:
      type: boolean
      description: |
        Statistics related to file-operations would be tracked.
    features-read-only:
      type: boolean
      description: |
        Enables you to mount the entire volume as read-only for all the
        clients (including NFS clients) accessing it.
    features-lock-heal:
      type: boolean
      description: |
        Enables self-healing of locks when the network disconnects.
    features-quota-timeout:
      type: integer
      description: |
        For performance reasons, quota caches the directory sizes on client.
        You can set timeout indicating the maximum duration of directory sizes
        in cache, from the time they are populated, during which they are
        considered valid
      minimum: 0
      maximum: 3600
    geo-replication-indexing:
      type: boolean
      description: |
        Use this option to automatically sync the changes in the filesystem
        from Master to Slave.
    nfs-enable-ino32:
      type: boolean
      description: |
        For 32-bit nfs clients or applications that do not support 64-bit
        inode numbers or large files, use this option from the CLI to make
        Gluster NFS return 32-bit inode numbers instead of 64-bit inode numbers.
    nfs-volume-access:
      type: string
      description: |
        Set the access type for the specified sub-volume.
      enum: [read-write,read-only]
    nfs-trusted-write:
      type: boolean
      description: |
        If there is an UNSTABLE write from the client, STABLE flag will be
        returned to force the client to not send a COMMIT request. In some
        environments, combined with a replicated GlusterFS setup, this option
        can improve write performance. This flag allows users to trust Gluster
        replication logic to sync data to the disks and recover when required.
        COMMIT requests if received will be handled in a default manner by
        fsyncing. STABLE writes are still handled in a sync manner.
    nfs-trusted-sync:
      type: boolean
      description: |
        All writes and COMMIT requests are treated as async. This implies that
        no write requests are guaranteed to be on server disks when the write
        reply is received at the NFS client. Trusted sync includes
        trusted-write behavior.
    nfs-export-dir:
      type: string
      description: |
        This option can be used to export specified comma separated
        subdirectories in the volume. The path must be an absolute path.
        Along with path allowed list of IPs/hostname can be associated with
        each subdirectory. If provided connection will allowed only from these
        IPs. Format: \<dir>[(hostspec[hostspec...])][,...]. Where hostspec can
        be an IP address, hostname or an IP range in CIDR notation. Note: Care
        must be taken while configuring this option as invalid entries and/or
        unreachable DNS servers can introduce unwanted delay in all the mount
        calls.
    nfs-export-volumes:
      type: boolean
      description: |
        Enable/Disable exporting entire volumes, instead if used in
        conjunction with nfs3.export-dir, can allow setting up only
        subdirectories as exports.
    nfs-rpc-auth-unix:
      type: boolean
      description: |
        Enable/Disable the AUTH_UNIX authentication type. This option is
        enabled by default for better interoperability. However, you can
        disable it if required.
    nfs-rpc-auth-null:
      type: boolean
      description: |
        Enable/Disable the AUTH_NULL authentication type. It is not recommended
        to change the default value for this option.
    nfs-ports-insecure:
      type: boolean
      description: |
        Allow client connections from unprivileged ports. By default only
        privileged ports are allowed. This is a global setting in case insecure
        ports are to be enabled for all exports using a single option.
    nfs-addr-namelookup:
      type: boolean
      description: |
        Turn-off name lookup for incoming client connections using this option.
        In some setups, the name server can take too long to reply to DNS
        queries resulting in timeouts of mount requests. Use this option to
        turn off name lookups during address authentication. Note, turning this
        off will prevent you from using hostnames in rpc-auth.addr.* filters.
    nfs-register-with-portmap:
      type: boolean
      description: |
        For systems that need to run multiple NFS servers, you need to prevent
        more than one from registering with portmap service. Use this option to
        turn off portmap registration for Gluster NFS.
    nfs-disable:
      type: boolean
      description: |
        Turn-off volume being exported by NFS
    performance-write-behind-window-size:
      type: integer
      description: |
        Size of the per-file write-behind buffer.
    performance-io-thread-count:
      type: integer
      description: |
        The number of threads in IO threads translator.
      minimum: 0
      maximum: 65
    performance-flush-behind:
      type: boolean
      description: |
        If this option is set ON, instructs write-behind translator to perform
        flush in background, by returning success (or any errors, if any of
        previous writes were failed) to application even before flush is sent
        to backend filesystem.
    performance-cache-max-file-size:
      type: integer
      description: |
        Sets the maximum file size cached by the io-cache translator. Can use
        the normal size descriptors of KB, MB, GB,TB or PB (for example, 6GB).
        Maximum size uint64.
    performance-cache-min-file-size:
      type: integer
      description: |
        Sets the minimum file size cached by the io-cache translator. Values
        same as "max" above
    performance-cache-refresh-timeout:
      type: integer
      description: |
        The cached data for a file will be retained till 'cache-refresh-timeout'
        seconds, after which data re-validation is performed.
      minimum: 0
      maximum: 61
    performance-cache-size:
      type: integer
      description: |
        Size of the read cache in bytes
    server-allow-insecure:
      type: boolean
      description: |
        Allow client connections from unprivileged ports. By default only
        privileged ports are allowed. This is a global setting in case insecure
        ports are to be enabled for all exports using a single option.
    server-grace-timeout:
      type: integer
      description: |
        Specifies the duration for the lock state to be maintained on the server
        after a network disconnection.
      minimum: 10
      maximum: 1800
    server-statedump-path:
      type: string
      description: |
        Location of the state dump file.
  required: [volume]
  additionalProperties: false
